# =========================
# GolangCI-Lint Configuration
# =========================

# =========================
# Config Version
# =========================
version: 2

# =========================
# Run Settings
# =========================
run:
  # Timeout for analysis
  timeout: 5m

  # Include test files
  tests: true

    # which dirs to skip: they won't be analyzed;
  skip-dirs:
    - vendor
    - future

# =========================
# Linter Settings
# =========================
linters-settings:
  # golint linter settings
  golint:
    min-confidence: 0

  govet:
    check-shadowing: true
    check-print-funcs: false

  # maligned suggests field reordering for memory alignment
  maligned:
    suggest-new: true

  # goconst identifies repeated string constants
  goconst:
    min-len: 2
    min-occurrences: 2

  # depguard controls allowed/forbidden imports
  depguard:
    list-type: blacklist
    packages:
      # logging is allowed only by logutils.Log, logrus
      # is allowed to use only in logutils package
      - github.com/sirupsen/logrus

  # spelling linter
  misspell:
    locale: US

  # line length linter
  lll:
    # Default is 120. '\t' is counted as 1 character.
    # set our project to 200, as things like v3_structs with inline comments end up being a touch long
    # also, for anyone using vscode, use the following configs:
    # "rewrap.wrappingColumn": 200 ... requires the rewrap plugin
    # "editor.rulers": [200]
    line-length: 500

  # gocritic linter settings
  gocritic:
    disable:
      - ifElseChain

# =========================
# Linter Enable/Disable
# =========================
linters:
  enable-all: true
  disable:
    - gocyclo
      # disabled gocyclo as we do have a lot of large methods to iterate thru the large JSON specs
    - dupl
      # disabled dupl as we do have a lot of duplicated code between resources and their tests, which gets flagged by this
    - errcheck
      # errocheck disabled to silience errors here: https://travis-ci.com/nutanix/terraform-provider-nutanix/jobs/131154435
      # Example error:
      # nutanix/data_source_nutanix_image.go:61:7: Error return value of `d.Set` is not checked (errcheck)
      # d.Set("name", utils.StringValue(resp.Status.Name))
      # waiting on terraform/hashi to let us know how they want us to changle those errors
      # see Error return value of `d.Set` is not checked (errcheck)
    - gosec
    - gochecknoinits
    - gochecknoglobals
    - funlen
    - gocognit
    - godox
    - wsl
    - nestif
    - godot
    - goconst
    - unparam
    - unused
    - staticcheck

# =========================
# Issues exclusions
# =========================
issues:
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  exclude:
    - composite literal uses unkeyed fields

  # Ignore specific linters for tests
  exclude-rules:
    - path: _test\.go
      linters:
        - testpackage
      # part of the golangci govet package is picking up things that go vet doesn't. Seems flaky, shutting that specific error off
    - path: client/client.go
      linters:
        - interfacer
      # interfacer lint on `filter` func suggests lint changes that dont compile
      # Details: linter suggests to convert `body` param to io.Reader since we don't use Close method, but return type requires
      ## io.ReadCloser thus failing to compile
