---
layout: "nutanix"
page_title: "NUTANIX: nutanix_image"
sidebar_current: "docs-nutanix-resource-image"
description: |-
  Provides a Nutanix Image resource to Create a Image.
---

# nutanix_image

Provides a Nutanix Image resource to Create a image.

## Example Usage

```hcl
resource "nutanix_image" "test" {
  name        = "Ubuntu"
  description = "Ubuntu"
  source_uri  = "http://archive.ubuntu.com/ubuntu/dists/bionic/main/installer-amd64/current/images/netboot/mini.iso"
}

# Create image with data_source_reference
resource "nutanix_image" "create_image_with_data_source_reference" {
  name        = "Sql Server Image"
  description = "Sql Server"
  image_type = "DISK_IMAGE"
  data_source_reference {
    kind = "vm_disk"
    uuid = "<uuid of the vm disk>"
  }
}
```

## Argument Reference

The following arguments are supported:

* `name`: - (Required) The name for the image.
* `categories`: - (Optional) Categories for the image.
* `project_reference`: - (Optional) The reference to a project.
* `owner_reference`: - (Optional) The reference to a user.
* `availability_zone_reference`: - (Optional) The reference to a availability_zone.
* `description`: - (Optional) A description for image.
* `architecture`: - (Optional) The supported CPU architecture for a disk image.
* `checksum`: - (Optional) Checksum of the image. The checksum is used for image validation if the image has a source specified. For images that do not have their source specified the checksum is generated by the image service.
* `image_type`: - (Optional) The type of image.
* `source_uri`: - (Optional) The source URI points at the location of the source image which is used to create/update image.
* `source_path`: - (Optional) A local path to upload an image.
* `version`: - (Optional) The image version.
* `data_source_reference` - (Optional)  Reference to a data source.

### Version

The version attribute supports the following:

* `product_name`: - (Optional) Name of the producer/distribution of the image. For example windows or red hat.
* `product_version`: - (Optional) Version string for the disk image.

### Data Source Reference
The data_source_reference attribute supports the following:
* uuid: - UUID of the source
* kind: - The kind name(Default value: vm_disk)


## Attributes Reference

The following attributes are exported:

* `metadata`: - The image kind metadata.
* `retrieval_uri_list`: - List of URIs where the raw image data can be accessed.
* `size_bytes`: - The size of the image in bytes.
* `state`: - The state of the image.
* `api_version` - The version of the API.

### Metadata

The metadata attribute exports the following:

* `last_update_time`: - UTC date and time in RFC-3339 format when image was last updated.
* `uuid`: - image UUID.
* `creation_time`: - UTC date and time in RFC-3339 format when image was created.
* `spec_version`: - Version number of the latest spec.
* `spec_hash`: - Hash of the spec. This will be returned from server.
* `name`: - image name.
* `should_force_translate`: - Applied on Prism Central only. Indicate whether force to translate the spec of the fanout request to fit the target cluster API schema.

### Reference

The `project_reference`, `owner_reference`, `availability_zone_reference`, attributes supports the following:

* `kind`: - The kind name (Default value: project)(Required).
* `name`: - the name(Optional).
* `uuid`: - the UUID(Required).

See detailed information in [Nutanix Image](https://www.nutanix.dev/api_references/prism-central-v3/#/be55b65efba86-create-a-new-image).
